#!/usr/bin/env bash

set -o errexit

# List all semver tags minus the "v" and sort them
gettags() {
	git tag \
		| sed -rn 's/v(([[:digit:]]+\.){2}[[:digit:]]+)/\1/p' \
		| sort -t. -n -k1,1 -k2,2 -k3,3
}

git fetch --tags

# Build associative array of most recent major and minor releases
declare -A latest

while IFS=. read -r major minor patch; do
	latest[v"$major"]="v$major.$minor.$patch"
	latest[v"$major.$minor"]="v$major.$minor.$patch"
done < <(gettags)

# Figure out remote for default branch
httpupstream=$(git for-each-ref --format='%(upstream:remotename)' \
	"$(git symbolic-ref --quiet HEAD)")

# Convert remote URL to ssh
url=$(git remote get-url "$httpupstream")
echo "::debug::$url"
upstream=${url/https:\/\//git@}
echo "::debug::$upstream"

# Move or create branches
for branch in "${!latest[@]}"; do
	if git show-ref --heads --quiet "$branch"; then
		git checkout "$branch"
		git merge --ff-only "${latest["$branch"]}"
		git push
	else
		git checkout "${latest["$branch"]}"
		git checkout -b "$branch"
		git push --set-upstream "$upstream" "$branch"
	fi
done
